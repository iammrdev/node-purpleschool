import { Markup, Scenes } from 'telegraf';
import { MyContext } from '../types';
import { back } from './back';

const sceneMenu = Markup.keyboard([
    [Markup.button.text('–ú–æ—Å–∫–≤–∞'), Markup.button.text('–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥')],
    [Markup.button.text('‚úÖ –í –º–µ–Ω—é')],
]).resize();

const topicMenu = Markup.keyboard([
    [Markup.button.text('JavaScript'), Markup.button.text('React')],
    [Markup.button.text('Vue'), Markup.button.text('Angular')],
    [Markup.button.text('SystemDesign'), Markup.button.text('Algorithms')],
    [Markup.button.text('üåè –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥'), Markup.button.text('‚úÖ –í –º–µ–Ω—é')],
]);

export const subscribeScene = new Scenes.BaseScene<MyContext>('subscribe');

subscribeScene.enter((ctx) => {
    if (ctx.session?.state?.city) {
        return ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏', topicMenu);
    }
    return ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥', sceneMenu);
});

subscribeScene.hears('‚úÖ –í –º–µ–Ω—é', (ctx) => {
    ctx.scene.leave();
    return back(ctx);
});

subscribeScene.hears('üåè –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥', (ctx) => {
    return ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥', sceneMenu);
});

subscribeScene.hears(['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'], (ctx) => {
    ctx.session.state.city = ctx.message.text;

    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏', topicMenu);
});

subscribeScene.hears(['JavaScript', 'React', 'Vue', 'Angular', 'SystemDesign', 'Algorithms'], (ctx) => {
    if (!ctx.session.state.topics) {
        ctx.session.state.topics = [];
    }

    if (!ctx.session.state.topics.includes(ctx.message.text)) {
        ctx.session.state.topics.push(ctx.message.text);
        return ctx.reply(`–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞: ${ctx.message.text}`);
    }
    ctx.reply(`–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞: ${ctx.message.text}`);
});

subscribeScene.on('text', async (ctx) => {
    if (ctx.session?.state?.city) {
        return ctx.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞', topicMenu);
    }
    return ctx.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞', sceneMenu);
});
