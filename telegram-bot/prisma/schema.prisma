// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  username   String
  telegramId BigInt   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  topics UserOnTopic[]
}

model Topic {
  id   Int    @id @default(autoincrement())
  name String

  users UserOnTopic[]
  offer Offer[]
}

model City {
  id   Int    @id @default(autoincrement())
  name String

  offers Offer[]
}

model Offer {
  id        Int      @id @default(autoincrement())
  title     String
  text      String
  image     String?
  startAt   DateTime @default(now())
  endAt     DateTime @default(now())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  topic   Topic        @relation(fields: [topicId], references: [id])
  topicId Int
  city    City         @relation(fields: [cityId], references: [id])
  cityId  Int
  tags    OfferOnTag[]
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique

  offers OfferOnTag[]
}

model UserOnTopic {
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  topic     Topic    @relation(fields: [topicId], references: [id])
  topicId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@id([userId, topicId])
}

model OfferOnTag {
  offer     Offer    @relation(fields: [offerId], references: [id])
  offerId   Int
  tag       Tag      @relation(fields: [tagId], references: [id])
  tagId     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@id([offerId, tagId])
}
